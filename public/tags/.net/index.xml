<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.net on The Wandering Glitch</title>
    <link>https://industrialinference.com/tags/.net/</link>
    <description>Recent content in .net on The Wandering Glitch</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Andrew Matthews</copyright><atom:link href="https://industrialinference.com/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Knowledge Graphs 4 - Querying your knowledge graph using .NET</title>
      <link>https://industrialinference.com/1/01/knowledge-graphs-4-querying-your-knowledge-graph-using-.net/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://industrialinference.com/1/01/knowledge-graphs-4-querying-your-knowledge-graph-using-.net/</guid>
      <description>This installment leaves the CLI behind to show how we consume a knowledge graph within our programmatic environments. The framework I use to work with RDF is dotNetRdf.
This is part 4 of an ongoing series providing a little background on &amp;lsquo;knowledge graphs&amp;rsquo;. The aim is to let software developers get up to speed as fast as possible. No theory, no digressions, and no history, just practical knowledge.
 Knowledge Graphs 101 Knowledge Graphs 2 – Playing on the CLI Knowledge Graphs 3 – Using a Triple Store Knowledge Graphs 4 – Querying your knowledge graph using .</description>
    </item>
    
  </channel>
</rss>
